// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to get the `ID` of a cloud provider in Venafi Control Plane, referenced by its name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as venafi from "@pulumi/venafi";
 *
 * // Find a cloud provider
 * const cpExample = venafi.getCloudProvider({
 *     name: "Cloud Provider Example",
 * });
 * ```
 */
export function getCloudProvider(args: GetCloudProviderArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudProviderResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("venafi:index/getCloudProvider:getCloudProvider", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudProvider.
 */
export interface GetCloudProviderArgs {
    /**
     * Name of the Cloud Provider to look up.
     */
    name: string;
}

/**
 * A collection of values returned by getCloudProvider.
 */
export interface GetCloudProviderResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Number of Cloud Keystores configured with the Cloud Provider
     */
    readonly keystoresCount: number;
    readonly name: string;
    /**
     * The status of the Cloud Provider. Either `VALIDATED` or `NOT_VALIDATED`.
     */
    readonly status: string;
    /**
     * The details of the Cloud Provider status. If the status is `VALIDATED`, this value will be empty.
     */
    readonly statusDetails: string;
    /**
     * The Cloud Provider type. Either `AWS`, `AZURE` or `GCP`
     */
    readonly type: string;
}
/**
 * Use this data source to get the `ID` of a cloud provider in Venafi Control Plane, referenced by its name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as venafi from "@pulumi/venafi";
 *
 * // Find a cloud provider
 * const cpExample = venafi.getCloudProvider({
 *     name: "Cloud Provider Example",
 * });
 * ```
 */
export function getCloudProviderOutput(args: GetCloudProviderOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCloudProviderResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("venafi:index/getCloudProvider:getCloudProvider", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudProvider.
 */
export interface GetCloudProviderOutputArgs {
    /**
     * Name of the Cloud Provider to look up.
     */
    name: pulumi.Input<string>;
}
