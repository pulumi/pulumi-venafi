// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the venafi package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'venafi';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * Access token for Venafi TLSPDC, user should use this for authentication
     */
    public readonly accessToken!: pulumi.Output<string | undefined>;
    /**
     * API key for Venafi Control Plane. Example: 142231b7-cvb0-412e-886b-6aeght0bc93d
     */
    public readonly apiKey!: pulumi.Output<string | undefined>;
    /**
     * application that will be using the token
     */
    public readonly clientId!: pulumi.Output<string | undefined>;
    /**
     * JWT of the identity provider associated to the Venafi Control Plane service account that is granting the access token
     */
    public readonly externalJwt!: pulumi.Output<string | undefined>;
    /**
     * Filename of PKCS#12 keystore containing a client certificate, private key, and chain certificates to authenticate to
     * TLSPDC
     */
    public readonly p12CertFilename!: pulumi.Output<string | undefined>;
    /**
     * Password for the PKCS#12 keystore declared in p12_cert
     */
    public readonly p12CertPassword!: pulumi.Output<string | undefined>;
    /**
     * Endpoint URL to request new Venafi Control Plane access tokens
     */
    public readonly tokenUrl!: pulumi.Output<string | undefined>;
    /**
     * Password for WebSDK user. Example: password
     *
     * @deprecated , please use accessToken instead
     */
    public readonly tppPassword!: pulumi.Output<string | undefined>;
    /**
     * WebSDK user for Venafi TLSPDC. Example: admin
     *
     * @deprecated , please use accessToken instead
     */
    public readonly tppUsername!: pulumi.Output<string | undefined>;
    /**
     * Use to specify a PEM-formatted file that contains certificates to be trust anchors for all communications with the
     * Venafi Web Service. Example: trustBundle = "${file("chain.pem")}"
     */
    public readonly trustBundle!: pulumi.Output<string | undefined>;
    /**
     * The Venafi Platform URL. Example: https://tpp.venafi.example/vedsdk
     */
    public readonly url!: pulumi.Output<string | undefined>;
    /**
     * DN of the Venafi TLSPDC policy folder or name of the Venafi as a Service application plus issuing template alias.
     * Example for Platform: testPolicy\\vault Example for Venafi as a Service: myApp\\Default
     */
    public readonly zone!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["accessToken"] = args?.accessToken ? pulumi.secret(args.accessToken) : undefined;
            resourceInputs["apiKey"] = args?.apiKey ? pulumi.secret(args.apiKey) : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["devMode"] = pulumi.output(args ? args.devMode : undefined).apply(JSON.stringify);
            resourceInputs["externalJwt"] = args?.externalJwt ? pulumi.secret(args.externalJwt) : undefined;
            resourceInputs["p12CertFilename"] = args ? args.p12CertFilename : undefined;
            resourceInputs["p12CertPassword"] = args?.p12CertPassword ? pulumi.secret(args.p12CertPassword) : undefined;
            resourceInputs["skipRetirement"] = pulumi.output(args ? args.skipRetirement : undefined).apply(JSON.stringify);
            resourceInputs["tokenUrl"] = args?.tokenUrl ? pulumi.secret(args.tokenUrl) : undefined;
            resourceInputs["tppPassword"] = args?.tppPassword ? pulumi.secret(args.tppPassword) : undefined;
            resourceInputs["tppUsername"] = args ? args.tppUsername : undefined;
            resourceInputs["trustBundle"] = args ? args.trustBundle : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accessToken", "apiKey", "externalJwt", "p12CertPassword", "tokenUrl", "tppPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Provider.__pulumiType, name, resourceInputs, opts);
    }

    /**
     * This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.
     */
    terraformConfig(): pulumi.Output<Provider.TerraformConfigResult> {
        return pulumi.runtime.call("pulumi:providers:venafi/terraformConfig", {
            "__self__": this,
        }, this);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * Access token for Venafi TLSPDC, user should use this for authentication
     */
    accessToken?: pulumi.Input<string>;
    /**
     * API key for Venafi Control Plane. Example: 142231b7-cvb0-412e-886b-6aeght0bc93d
     */
    apiKey?: pulumi.Input<string>;
    /**
     * application that will be using the token
     */
    clientId?: pulumi.Input<string>;
    /**
     * When set to true, the resulting certificate will be issued by an ephemeral, no trust CA rather than enrolling using
     * Venafi as a Service or Trust Protection Platform. Useful for development and testing
     */
    devMode?: pulumi.Input<boolean>;
    /**
     * JWT of the identity provider associated to the Venafi Control Plane service account that is granting the access token
     */
    externalJwt?: pulumi.Input<string>;
    /**
     * Filename of PKCS#12 keystore containing a client certificate, private key, and chain certificates to authenticate to
     * TLSPDC
     */
    p12CertFilename?: pulumi.Input<string>;
    /**
     * Password for the PKCS#12 keystore declared in p12_cert
     */
    p12CertPassword?: pulumi.Input<string>;
    skipRetirement?: pulumi.Input<boolean>;
    /**
     * Endpoint URL to request new Venafi Control Plane access tokens
     */
    tokenUrl?: pulumi.Input<string>;
    /**
     * Password for WebSDK user. Example: password
     *
     * @deprecated , please use accessToken instead
     */
    tppPassword?: pulumi.Input<string>;
    /**
     * WebSDK user for Venafi TLSPDC. Example: admin
     *
     * @deprecated , please use accessToken instead
     */
    tppUsername?: pulumi.Input<string>;
    /**
     * Use to specify a PEM-formatted file that contains certificates to be trust anchors for all communications with the
     * Venafi Web Service. Example: trustBundle = "${file("chain.pem")}"
     */
    trustBundle?: pulumi.Input<string>;
    /**
     * The Venafi Platform URL. Example: https://tpp.venafi.example/vedsdk
     */
    url?: pulumi.Input<string>;
    /**
     * DN of the Venafi TLSPDC policy folder or name of the Venafi as a Service application plus issuing template alias.
     * Example for Platform: testPolicy\\vault Example for Venafi as a Service: myApp\\Default
     */
    zone?: pulumi.Input<string>;
}

export namespace Provider {
    /**
     * The results of the Provider.terraformConfig method.
     */
    export interface TerraformConfigResult {
        readonly result: {[key: string]: any};
    }

}
