// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides access to retrieve configuration from SSH certificate issuance template from *Venafi Trust Protection Platform*.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as venafi from "@pulumi/venafi";
 *
 * const cit = new venafi.SshConfig("cit", {template: "devops-terraform-cit"});
 * ```
 */
export class SshConfig extends pulumi.CustomResource {
    /**
     * Get an existing SshConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SshConfigState, opts?: pulumi.CustomResourceOptions): SshConfig {
        return new SshConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'venafi:index/sshConfig:SshConfig';

    /**
     * Returns true if the given object is an instance of SshConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SshConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SshConfig.__pulumiType;
    }

    /**
     * (Optional, string) The template's CA public key.
     */
    public /*out*/ readonly caPublicKey!: pulumi.Output<string>;
    /**
     * (Optional, set of strings) A list of user names exported from the template.
     */
    public /*out*/ readonly principals!: pulumi.Output<string[]>;
    /**
     * The SSH certificate issuing template.
     */
    public readonly template!: pulumi.Output<string>;

    /**
     * Create a SshConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SshConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SshConfigArgs | SshConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SshConfigState | undefined;
            resourceInputs["caPublicKey"] = state ? state.caPublicKey : undefined;
            resourceInputs["principals"] = state ? state.principals : undefined;
            resourceInputs["template"] = state ? state.template : undefined;
        } else {
            const args = argsOrState as SshConfigArgs | undefined;
            if ((!args || args.template === undefined) && !opts.urn) {
                throw new Error("Missing required property 'template'");
            }
            resourceInputs["template"] = args ? args.template : undefined;
            resourceInputs["caPublicKey"] = undefined /*out*/;
            resourceInputs["principals"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SshConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SshConfig resources.
 */
export interface SshConfigState {
    /**
     * (Optional, string) The template's CA public key.
     */
    caPublicKey?: pulumi.Input<string>;
    /**
     * (Optional, set of strings) A list of user names exported from the template.
     */
    principals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The SSH certificate issuing template.
     */
    template?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SshConfig resource.
 */
export interface SshConfigArgs {
    /**
     * The SSH certificate issuing template.
     */
    template: pulumi.Input<string>;
}
