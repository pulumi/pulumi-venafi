// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package venafi

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-venafi/sdk/go/venafi/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the `ID` of a cloud keystore in Venafi Control Plane, referenced by its name and parent
// cloud provider ID. You can use `getCloudProvider` data source to obtain the ID of the parent cloud provider.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-venafi/sdk/go/venafi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Find a cloud keystore with a static cloud provider id
//			_, err := venafi.GetCloudKeystore(ctx, &venafi.GetCloudKeystoreArgs{
//				CloudProviderId: "e48897d0-2762-11ef-8fab-79ac590dd358",
//				Name:            "Cloud Keystore Example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// Find a cloud keystore by using venafi_cloud_provider data source as input
//			_, err = venafi.GetCloudKeystore(ctx, &venafi.GetCloudKeystoreArgs{
//				CloudProviderId: cpExample.Id,
//				Name:            "Cloud Keystore example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCloudKeystore(ctx *pulumi.Context, args *GetCloudKeystoreArgs, opts ...pulumi.InvokeOption) (*GetCloudKeystoreResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCloudKeystoreResult
	err := ctx.Invoke("venafi:index/getCloudKeystore:getCloudKeystore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudKeystore.
type GetCloudKeystoreArgs struct {
	// ID of the cloud provider whom the cloud keystore to look up belongs to.
	CloudProviderId string `pulumi:"cloudProviderId"`
	// Name of the cloud keystore to look up.
	Name string `pulumi:"name"`
}

// A collection of values returned by getCloudKeystore.
type GetCloudKeystoreResult struct {
	CloudProviderId string `pulumi:"cloudProviderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Number of machine identities provisioned to the cloud keystore.
	MachineIdentitiesCount int    `pulumi:"machineIdentitiesCount"`
	Name                   string `pulumi:"name"`
	// The cloud keystore type. Either `ACM`, `AKV` or `GCM`.
	Type string `pulumi:"type"`
}

func GetCloudKeystoreOutput(ctx *pulumi.Context, args GetCloudKeystoreOutputArgs, opts ...pulumi.InvokeOption) GetCloudKeystoreResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCloudKeystoreResultOutput, error) {
			args := v.(GetCloudKeystoreArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("venafi:index/getCloudKeystore:getCloudKeystore", args, GetCloudKeystoreResultOutput{}, options).(GetCloudKeystoreResultOutput), nil
		}).(GetCloudKeystoreResultOutput)
}

// A collection of arguments for invoking getCloudKeystore.
type GetCloudKeystoreOutputArgs struct {
	// ID of the cloud provider whom the cloud keystore to look up belongs to.
	CloudProviderId pulumi.StringInput `pulumi:"cloudProviderId"`
	// Name of the cloud keystore to look up.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCloudKeystoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudKeystoreArgs)(nil)).Elem()
}

// A collection of values returned by getCloudKeystore.
type GetCloudKeystoreResultOutput struct{ *pulumi.OutputState }

func (GetCloudKeystoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudKeystoreResult)(nil)).Elem()
}

func (o GetCloudKeystoreResultOutput) ToGetCloudKeystoreResultOutput() GetCloudKeystoreResultOutput {
	return o
}

func (o GetCloudKeystoreResultOutput) ToGetCloudKeystoreResultOutputWithContext(ctx context.Context) GetCloudKeystoreResultOutput {
	return o
}

func (o GetCloudKeystoreResultOutput) CloudProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudKeystoreResult) string { return v.CloudProviderId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCloudKeystoreResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudKeystoreResult) string { return v.Id }).(pulumi.StringOutput)
}

// Number of machine identities provisioned to the cloud keystore.
func (o GetCloudKeystoreResultOutput) MachineIdentitiesCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudKeystoreResult) int { return v.MachineIdentitiesCount }).(pulumi.IntOutput)
}

func (o GetCloudKeystoreResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudKeystoreResult) string { return v.Name }).(pulumi.StringOutput)
}

// The cloud keystore type. Either `ACM`, `AKV` or `GCM`.
func (o GetCloudKeystoreResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudKeystoreResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudKeystoreResultOutput{})
}
