// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package venafi

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-venafi/sdk/go/venafi/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the `ID` of a cloud provider in Venafi Control Plane, referenced by its name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-venafi/sdk/go/venafi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Find a cloud provider
//			_, err := venafi.GetCloudProvider(ctx, &venafi.GetCloudProviderArgs{
//				Name: "Cloud Provider Example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCloudProvider(ctx *pulumi.Context, args *GetCloudProviderArgs, opts ...pulumi.InvokeOption) (*GetCloudProviderResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCloudProviderResult
	err := ctx.Invoke("venafi:index/getCloudProvider:getCloudProvider", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProvider.
type GetCloudProviderArgs struct {
	// Name of the Cloud Provider to look up.
	Name string `pulumi:"name"`
}

// A collection of values returned by getCloudProvider.
type GetCloudProviderResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Number of Cloud Keystores configured with the Cloud Provider
	KeystoresCount int    `pulumi:"keystoresCount"`
	Name           string `pulumi:"name"`
	// The status of the Cloud Provider. Either `VALIDATED` or `NOT_VALIDATED`.
	Status string `pulumi:"status"`
	// The details of the Cloud Provider status. If the status is `VALIDATED`, this value will be empty.
	StatusDetails string `pulumi:"statusDetails"`
	// The Cloud Provider type. Either `AWS`, `AZURE` or `GCP`
	Type string `pulumi:"type"`
}

func GetCloudProviderOutput(ctx *pulumi.Context, args GetCloudProviderOutputArgs, opts ...pulumi.InvokeOption) GetCloudProviderResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCloudProviderResultOutput, error) {
			args := v.(GetCloudProviderArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("venafi:index/getCloudProvider:getCloudProvider", args, GetCloudProviderResultOutput{}, options).(GetCloudProviderResultOutput), nil
		}).(GetCloudProviderResultOutput)
}

// A collection of arguments for invoking getCloudProvider.
type GetCloudProviderOutputArgs struct {
	// Name of the Cloud Provider to look up.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCloudProviderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProvider.
type GetCloudProviderResultOutput struct{ *pulumi.OutputState }

func (GetCloudProviderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderResult)(nil)).Elem()
}

func (o GetCloudProviderResultOutput) ToGetCloudProviderResultOutput() GetCloudProviderResultOutput {
	return o
}

func (o GetCloudProviderResultOutput) ToGetCloudProviderResultOutputWithContext(ctx context.Context) GetCloudProviderResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetCloudProviderResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderResult) string { return v.Id }).(pulumi.StringOutput)
}

// Number of Cloud Keystores configured with the Cloud Provider
func (o GetCloudProviderResultOutput) KeystoresCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderResult) int { return v.KeystoresCount }).(pulumi.IntOutput)
}

func (o GetCloudProviderResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the Cloud Provider. Either `VALIDATED` or `NOT_VALIDATED`.
func (o GetCloudProviderResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderResult) string { return v.Status }).(pulumi.StringOutput)
}

// The details of the Cloud Provider status. If the status is `VALIDATED`, this value will be empty.
func (o GetCloudProviderResultOutput) StatusDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderResult) string { return v.StatusDetails }).(pulumi.StringOutput)
}

// The Cloud Provider type. Either `AWS`, `AZURE` or `GCP`
func (o GetCloudProviderResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudProviderResultOutput{})
}
