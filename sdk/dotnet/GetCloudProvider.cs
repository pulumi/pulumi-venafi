// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Venafi
{
    public static class GetCloudProvider
    {
        /// <summary>
        /// Use this data source to get the `ID` of a cloud provider in Venafi Control Plane, referenced by its name.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Venafi = Pulumi.Venafi;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Find a cloud provider
        ///     var cpExample = Venafi.GetCloudProvider.Invoke(new()
        ///     {
        ///         Name = "Cloud Provider Example",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCloudProviderResult> InvokeAsync(GetCloudProviderArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudProviderResult>("venafi:index/getCloudProvider:getCloudProvider", args ?? new GetCloudProviderArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get the `ID` of a cloud provider in Venafi Control Plane, referenced by its name.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Venafi = Pulumi.Venafi;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Find a cloud provider
        ///     var cpExample = Venafi.GetCloudProvider.Invoke(new()
        ///     {
        ///         Name = "Cloud Provider Example",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudProviderResult> Invoke(GetCloudProviderInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudProviderResult>("venafi:index/getCloudProvider:getCloudProvider", args ?? new GetCloudProviderInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get the `ID` of a cloud provider in Venafi Control Plane, referenced by its name.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Venafi = Pulumi.Venafi;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Find a cloud provider
        ///     var cpExample = Venafi.GetCloudProvider.Invoke(new()
        ///     {
        ///         Name = "Cloud Provider Example",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudProviderResult> Invoke(GetCloudProviderInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudProviderResult>("venafi:index/getCloudProvider:getCloudProvider", args ?? new GetCloudProviderInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudProviderArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Cloud Provider to look up.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetCloudProviderArgs()
        {
        }
        public static new GetCloudProviderArgs Empty => new GetCloudProviderArgs();
    }

    public sealed class GetCloudProviderInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Cloud Provider to look up.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetCloudProviderInvokeArgs()
        {
        }
        public static new GetCloudProviderInvokeArgs Empty => new GetCloudProviderInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudProviderResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Number of Cloud Keystores configured with the Cloud Provider
        /// </summary>
        public readonly int KeystoresCount;
        public readonly string Name;
        /// <summary>
        /// The status of the Cloud Provider. Either `VALIDATED` or `NOT_VALIDATED`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The details of the Cloud Provider status. If the status is `VALIDATED`, this value will be empty.
        /// </summary>
        public readonly string StatusDetails;
        /// <summary>
        /// The Cloud Provider type. Either `AWS`, `AZURE` or `GCP`
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCloudProviderResult(
            string id,

            int keystoresCount,

            string name,

            string status,

            string statusDetails,

            string type)
        {
            Id = id;
            KeystoresCount = keystoresCount;
            Name = name;
            Status = status;
            StatusDetails = statusDetails;
            Type = type;
        }
    }
}
