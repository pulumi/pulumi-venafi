// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.venafi.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCloudProviderResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Number of Cloud Keystores configured with the Cloud Provider
     * 
     */
    private Integer keystoresCount;
    private String name;
    /**
     * @return The status of the Cloud Provider. Either `VALIDATED` or `NOT_VALIDATED`.
     * 
     */
    private String status;
    /**
     * @return The details of the Cloud Provider status. If the status is `VALIDATED`, this value will be empty.
     * 
     */
    private String statusDetails;
    /**
     * @return The Cloud Provider type. Either `AWS`, `AZURE` or `GCP`
     * 
     */
    private String type;

    private GetCloudProviderResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Number of Cloud Keystores configured with the Cloud Provider
     * 
     */
    public Integer keystoresCount() {
        return this.keystoresCount;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The status of the Cloud Provider. Either `VALIDATED` or `NOT_VALIDATED`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The details of the Cloud Provider status. If the status is `VALIDATED`, this value will be empty.
     * 
     */
    public String statusDetails() {
        return this.statusDetails;
    }
    /**
     * @return The Cloud Provider type. Either `AWS`, `AZURE` or `GCP`
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudProviderResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private Integer keystoresCount;
        private String name;
        private String status;
        private String statusDetails;
        private String type;
        public Builder() {}
        public Builder(GetCloudProviderResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.keystoresCount = defaults.keystoresCount;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
    	      this.statusDetails = defaults.statusDetails;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder keystoresCount(Integer keystoresCount) {
            if (keystoresCount == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderResult", "keystoresCount");
            }
            this.keystoresCount = keystoresCount;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder statusDetails(String statusDetails) {
            if (statusDetails == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderResult", "statusDetails");
            }
            this.statusDetails = statusDetails;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderResult", "type");
            }
            this.type = type;
            return this;
        }
        public GetCloudProviderResult build() {
            final var _resultValue = new GetCloudProviderResult();
            _resultValue.id = id;
            _resultValue.keystoresCount = keystoresCount;
            _resultValue.name = name;
            _resultValue.status = status;
            _resultValue.statusDetails = statusDetails;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
