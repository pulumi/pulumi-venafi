// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.venafi.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SshConfigState extends com.pulumi.resources.ResourceArgs {

    public static final SshConfigState Empty = new SshConfigState();

    /**
     * (Optional, string) The template&#39;s CA public key.
     * 
     */
    @Import(name="caPublicKey")
    private @Nullable Output<String> caPublicKey;

    /**
     * @return (Optional, string) The template&#39;s CA public key.
     * 
     */
    public Optional<Output<String>> caPublicKey() {
        return Optional.ofNullable(this.caPublicKey);
    }

    /**
     * (Optional, set of strings) A list of user names exported from the template.
     * 
     */
    @Import(name="principals")
    private @Nullable Output<List<String>> principals;

    /**
     * @return (Optional, set of strings) A list of user names exported from the template.
     * 
     */
    public Optional<Output<List<String>>> principals() {
        return Optional.ofNullable(this.principals);
    }

    /**
     * The SSH certificate issuing template.
     * 
     */
    @Import(name="template")
    private @Nullable Output<String> template;

    /**
     * @return The SSH certificate issuing template.
     * 
     */
    public Optional<Output<String>> template() {
        return Optional.ofNullable(this.template);
    }

    private SshConfigState() {}

    private SshConfigState(SshConfigState $) {
        this.caPublicKey = $.caPublicKey;
        this.principals = $.principals;
        this.template = $.template;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SshConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SshConfigState $;

        public Builder() {
            $ = new SshConfigState();
        }

        public Builder(SshConfigState defaults) {
            $ = new SshConfigState(Objects.requireNonNull(defaults));
        }

        /**
         * @param caPublicKey (Optional, string) The template&#39;s CA public key.
         * 
         * @return builder
         * 
         */
        public Builder caPublicKey(@Nullable Output<String> caPublicKey) {
            $.caPublicKey = caPublicKey;
            return this;
        }

        /**
         * @param caPublicKey (Optional, string) The template&#39;s CA public key.
         * 
         * @return builder
         * 
         */
        public Builder caPublicKey(String caPublicKey) {
            return caPublicKey(Output.of(caPublicKey));
        }

        /**
         * @param principals (Optional, set of strings) A list of user names exported from the template.
         * 
         * @return builder
         * 
         */
        public Builder principals(@Nullable Output<List<String>> principals) {
            $.principals = principals;
            return this;
        }

        /**
         * @param principals (Optional, set of strings) A list of user names exported from the template.
         * 
         * @return builder
         * 
         */
        public Builder principals(List<String> principals) {
            return principals(Output.of(principals));
        }

        /**
         * @param principals (Optional, set of strings) A list of user names exported from the template.
         * 
         * @return builder
         * 
         */
        public Builder principals(String... principals) {
            return principals(List.of(principals));
        }

        /**
         * @param template The SSH certificate issuing template.
         * 
         * @return builder
         * 
         */
        public Builder template(@Nullable Output<String> template) {
            $.template = template;
            return this;
        }

        /**
         * @param template The SSH certificate issuing template.
         * 
         * @return builder
         * 
         */
        public Builder template(String template) {
            return template(Output.of(template));
        }

        public SshConfigState build() {
            return $;
        }
    }

}
