// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.venafi;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyArgs Empty = new PolicyArgs();

    /**
     * The JSON-formatted certificate policy specification as documented
     * [here](https://github.com/Venafi/vcert/blob/master/README-POLICY-SPEC.md). Typically read from a file using the `file`
     * function.
     * 
     */
    @Import(name="policySpecification")
    private @Nullable Output<String> policySpecification;

    /**
     * @return The JSON-formatted certificate policy specification as documented
     * [here](https://github.com/Venafi/vcert/blob/master/README-POLICY-SPEC.md). Typically read from a file using the `file`
     * function.
     * 
     */
    public Optional<Output<String>> policySpecification() {
        return Optional.ofNullable(this.policySpecification);
    }

    /**
     * The *Trust Protection Plaform* policy folder or *Venafi Control Plane* application and
     * issuing template.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return The *Trust Protection Plaform* policy folder or *Venafi Control Plane* application and
     * issuing template.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private PolicyArgs() {}

    private PolicyArgs(PolicyArgs $) {
        this.policySpecification = $.policySpecification;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyArgs $;

        public Builder() {
            $ = new PolicyArgs();
        }

        public Builder(PolicyArgs defaults) {
            $ = new PolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param policySpecification The JSON-formatted certificate policy specification as documented
         * [here](https://github.com/Venafi/vcert/blob/master/README-POLICY-SPEC.md). Typically read from a file using the `file`
         * function.
         * 
         * @return builder
         * 
         */
        public Builder policySpecification(@Nullable Output<String> policySpecification) {
            $.policySpecification = policySpecification;
            return this;
        }

        /**
         * @param policySpecification The JSON-formatted certificate policy specification as documented
         * [here](https://github.com/Venafi/vcert/blob/master/README-POLICY-SPEC.md). Typically read from a file using the `file`
         * function.
         * 
         * @return builder
         * 
         */
        public Builder policySpecification(String policySpecification) {
            return policySpecification(Output.of(policySpecification));
        }

        /**
         * @param zone The *Trust Protection Plaform* policy folder or *Venafi Control Plane* application and
         * issuing template.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone The *Trust Protection Plaform* policy folder or *Venafi Control Plane* application and
         * issuing template.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public PolicyArgs build() {
            return $;
        }
    }

}
