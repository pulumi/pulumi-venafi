From 0f3faf7d2d0bf222094d18905051fa8816fcab21 Mon Sep 17 00:00:00 2001
From: Ian Wahbe <ian@wahbe.com>
Date: Tue, 3 Oct 2023 12:21:45 -0700
Subject: [PATCH 2/2] Docs changes to venafi_certificate

---
 .../docs/r/venafi_certificate.html.markdown   | 56 +++----------------
 1 file changed, 9 insertions(+), 47 deletions(-)

diff --git a/website/docs/r/venafi_certificate.html.markdown b/website/docs/r/venafi_certificate.html.markdown
index 34314a6..617acc7 100644
--- a/website/docs/r/venafi_certificate.html.markdown
+++ b/website/docs/r/venafi_certificate.html.markdown
@@ -15,6 +15,11 @@ For backward compatibility during Terraform state refresh please update to versi
 Provides access to TLS key and certificate data enrolled using Venafi. This can be used to define a
 certificate.
 
+The `venafi_certificate` resource handles certificate renewals as long as a
+`pulumi up` is run within the `expiration_window` period. Keep in mind that the
+`expiration_window` in the provider configuration needs to align with the renewal
+window of the issuing CA to achieve the desired result.
+
 ## Example Usage
 
 ```hcl
@@ -44,14 +49,14 @@ The following arguments are supported:
 
 * `nickname` - (Optional, string) Use to specify a name for the new certificate object that will be created and placed in a policy. Only valid for TPP.
 
-* `algorithm` - (Optional, string) Key encryption algorithm, either RSA or ECDSA.
-  Defaults to "RSA".
+* `algorithm` - (Optional, string) Key encryption algorithm, either `RSA` or `ECDSA`.
+  Defaults to `RSA`.
 
 * `rsa_bits` - (Optional, integer) Number of bits to use when generating an RSA key.
-  Applies when algorithm=RSA.  Defaults to 2048.
+  Applies when `algorithm=RSA`.  Defaults to `2048`.
 
 * `ecsa_curve` - (Optional, string) Elliptic curve to use when generating an ECDSA
-  key pair.  Applies when algorithm=ECDSA.  Defaults to "P521".
+  key pair.  Applies when `algorithm=ECDSA`.  Defaults to `P521`.
 
 * `san_dns` - (Optional, set of strings) List of DNS names to use as alternative
   subjects of the certificate.
@@ -103,46 +108,3 @@ The `venafi_certificate` resource handles certificate renewals as long as a
 `terraform apply` is done within the `expiration_window` period. Keep in mind that the
 `expiration_window` in the Terraform configuration needs to align with the renewal
 window of the issuing CA to achieve the desired result.
-
-## Import
-
-~>**Note:** This operation doesn't support `issuer_hint` among the attributes for importing, neither local generated certificate key-pair.
-
-~>**Note:** Don't specify an `expiration_window` within your Terraform file when importing, since will trigger a new update on re-applying your configuration unless that's desired. By default we set a value of `168` hours.
-
-The `venafi_certificate` resource supports the Terraform [import](https://www.terraform.io/docs/cli/import/index.html)
-method.
-
-The `import_id` is composed by an `id` which is different for each platform, a comma (,) and the `key-password`.
-
-The `id` for each platform is:
-
-**TPP:**
-
-The `nickname` of the certificate, which represents the name of the certificate object in TPP. Internally we built the `pickup_id` using the `zone` defined at the provider block.
-
-~>**Note:** The certificate object name at TPP, usually, should be the same as the `common_name` provided as it is considered good practice, but the `nickname` actually could differ from the common name, as there some use cases whenever you want to handle certificates with different nicknames. For example, you could have certificates with same common name and different SANs, then, you could manage many certificate resources that share the same common name using `for_each` and `count` meta arguments.
-
-**VaaS:**
-
-The `pickup-id`.
-
-->**Note:** You can learn more about the `pickup-id` and pickup actions for TPP, [here](https://github.com/Venafi/vcert/blob/master/README-CLI-PLATFORM.md#certificate-retrieval-parameters), and for Vaas, [here](https://github.com/Venafi/vcert/blob/master/README-CLI-CLOUD.md)
-```sh
-terraform import "venafi_certificate.<resource_name>" "<id>,<key-password>"
-```
-Example (assuming our resource name is `imported_certificate`):
-
-```hcl
-resource "venafi_certificate" "imported_certificate" {}
-```
-
-**TPP:**
-```sh
-terraform import "venafi_certificate.imported_certificate" "tpp.venafi.example,my_key_password"
-```
-
-**VaaS:**
-```sh
-terraform import "venafi_certificate.imported_certificate" "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx,my_key_password"
-```
-- 
2.42.0

